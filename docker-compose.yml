# ----------------------------
# Purpose: Docker Compose file for a local data pipeline using PostgreSQL and Python
# Target: Local Data Pipeline using Dockerized (PostgreSQL + Python)
# This is personal work for educational purposes.
# ----------------------------

version: "3.8"

services:
  postgres-db:
    image: postgres:14-alpine
    container_name: my-postgres-db
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword # Dev note: this is vulnerable and use a secret management tool or passing ENV in runtime is good idea!
      - POSTGRES_DB=mydatabase # Dev note: will implement secrets managament or env loaded from .env(.env gets ignored by git)
    ports:
      - "5432:5432"
    volumes:
      # Dev note: using a named volume to persist data.
      - db-data:/var/lib/postgresql/data

  producer-app:
    build: .
    container_name: my-producer-app
    environment:
      - DB_HOST=postgres-db
      - DB_NAME=mydatabase
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
    depends_on:
      - postgres-db
    command: python producer.py # Dev note: Override the default CMD to run the producer

  consumer-app:
    build: .
    container_name: my-consumer-app
    environment:
      - DB_HOST=postgres-db
      - DB_NAME=mydatabase
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
    depends_on:
      - producer-app
    command: python consumer.py # Dev note: added python consumer.py it was missing in initial code.

# Dev note: The named volume definition for PostgreSQL data persistence
volumes:
  db-data:
